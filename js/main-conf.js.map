{"version":3,"sources":["library.js","main-conf.js"],"names":[],"mappingsrfile":"main-conf.js","sourcesContent":["define('library',[\"exports\", \"react\"], function (exports, _react) {\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tfunction _interopRequireDefault(obj) {\n\t\treturn obj && obj.__esModule ? obj : {\n\t\t\tdefault: obj\n\t\t};\n\t}\n\n\tvar getAJAXCall = function getAJAXCall(_ref) {\n\t\tvar method = _ref.method;\n\t\tvar data = _ref.data;\n\t\tvar url = _ref.url;\n\t\tvar deleteCallback = _ref.deleteCallback;\n\t\tvar callback = _ref.callback;\n\n\t\t$.ajax({\n\t\t\ttype: method,\n\t\t\turl: url,\n\t\t\tdata: JSON.stringify(data),\n\t\t\tsuccess: callback,\n\t\t\tcontentType: \"application/json\",\n\t\t\tstatusCode: deleteCallback && {\n\t\t\t\t200: deleteCallback\n\t\t\t}\n\t\t});\n\t};\n\n\tvar createArchiveElements = function createArchiveElements(source, compare, optionByCompare) {\n\t\tvar archive = {};\n\n\t\tsource.map(function (item) {\n\t\t\tvar archiveOfItems = [];\n\n\t\t\titem[optionByCompare] = item[optionByCompare] || [];\n\n\t\t\titem[optionByCompare].map(function (id) {\n\t\t\t\tcompare.map(function (compareElement) {\n\t\t\t\t\tif (id == compareElement.id) {\n\t\t\t\t\t\tarchiveOfItems.push(compareElement);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tarchive[item.id] = archiveOfItems;\n\t\t});\n\n\t\treturn archive;\n\t};\n\n\tvar createArchiveElementsMatcher = function createArchiveElementsMatcher(source, compare, optionByCompare) {\n\t\tvar archive = {};\n\n\t\tsource.map(function (item) {\n\t\t\tvar id = item[optionByCompare];\n\n\t\t\tcompare.map(function (compareElement) {\n\t\t\t\tif (id == compareElement.id) {\n\t\t\t\t\tarchive[item.matcherid] = compareElement;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn archive;\n\t};\n\n\tvar checkValidation = function checkValidation(tests, callback, that) {\n\t\tvar result = {};\n\n\t\tfor (var key in tests) {\n\t\t\tif (tests[key][\"approve\"]) {\n\t\t\t\tresult[key] = tests[key][\"descr\"];\n\t\t\t}\n\t\t}\n\n\t\tthat.setState({\n\t\t\terrors: result\n\t\t}, callback);\n\t};\n\n\tvar deleteConfirmation = function deleteConfirmation() {\n\t\treturn confirm('Подтверждение удаления');\n\t};\n\n\tvar urlsLibrary = {\n\t\tcontacts: '/rest-service/api/contacts/by/',\n\t\tregion: '/rest-service/api/contacts/region',\n\t\tobject: '/rest-service/api/object/',\n\t\toperation: '/rest-service/api/operation/',\n\t\tanswer: '/rest-service/api/answer/',\n\t\tquestion: '/rest-service/api/question/',\n\t\tstandard: '/rest-service/api/standard/',\n\t\tdocument: '/rest-service/api/document/',\n\t\tmatch: '/rest-service/api/match/',\n\t\ttheme: '/rest-service/api/theme/',\n\t\tfaq: '/rest-service/api/faq/'\n\n\t};\n\n\texports.default = {\n\t\tlib: {\n\t\t\tgetAJAXCall: getAJAXCall,\n\t\t\tcreateArchiveElements: createArchiveElements,\n\t\t\tcreateArchiveElementsMatcher: createArchiveElementsMatcher,\n\t\t\tcheckValidation: checkValidation,\n\t\t\tdeleteConfirmation: deleteConfirmation,\n\t\t\turlsLibrary: urlsLibrary\n\t\t}\n\t};\n});\nrequire([\"library\"], function () {});\n","define('main-conf',['react', 'react-dom', 'library'], function (_react, _reactDom, _library) {\n  'use strict';\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _reactDom2 = _interopRequireDefault(_reactDom);\n\n  var _library2 = _interopRequireDefault(_library);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var lib = _library2.default.lib;\n\n  var ContactMapRegion = function (_React$Component) {\n    _inherits(ContactMapRegion, _React$Component);\n\n    function ContactMapRegion(props) {\n      _classCallCheck(this, ContactMapRegion);\n\n      var _this = _possibleConstructorReturn(this, (ContactMapRegion.__proto__ || Object.getPrototypeOf(ContactMapRegion)).call(this, props));\n\n      _this.clearState = function () {\n        var onChange = _this.props.onChange;\n\n        _this.setState({\n          developedRegion: {},\n          edit: false,\n          addPoint: false,\n          success: false,\n          currentPointId: null,\n          currentRegion: 0,\n          errors: []\n        }, function () {\n          onChange();\n        });\n      };\n\n      _this.selectChangeOption = function (e) {\n        var currentRegion = e.target.value;\n        _this.setState({ currentRegion: currentRegion, edit: true, addPoint: true });\n\n        lib.getAJAXCall({\n          method: 'GET',\n          url: lib.urlsLibrary.contacts + currentRegion,\n          callback: function callback(geoObj) {\n\n            _this.setState({\n              developedRegion: geoObj,\n              edit: true,\n              addPoint: false\n            });\n          }\n        });\n      };\n\n      _this.createGeo = function () {\n        _this.setState({\n          developedPoint: {\n            title: \"\",\n            address: \"\",\n            point: [0, 0]\n          },\n          edit: true,\n          addPoint: true\n        });\n      };\n\n      _this.addNewMap = function () {\n        var _this$state = _this.state;\n        var developedRegion = _this$state.developedRegion;\n        var developedPoint = _this$state.developedPoint;\n        var currentRegion = _this$state.currentRegion;\n\n        var method = void 0;\n\n        var tests = {\n          addtitle: {\n            approve: developedPoint.title.length <= 0,\n            descr: \"Введите название пункта\"\n          },\n          addpoint: {\n            approve: developedPoint.point.length <= 1,\n            descr: \"Введите координаты корректно\"\n          }\n        };\n\n        lib.checkValidation(tests, function () {\n          if (Object.keys(_this.state.errors).length === 0) {\n            if (developedRegion.map === undefined) {\n              method = 'POST';\n              developedRegion.map = [];\n              developedRegion.map.push(developedPoint);\n            } else {\n              method = 'PUT';\n              developedRegion.map.push(developedPoint);\n            }\n\n            lib.getAJAXCall({\n              method: method,\n              url: lib.urlsLibrary.contacts + currentRegion,\n              data: developedRegion,\n              callback: function callback(geoObj) {\n                _this.setState({\n                  developedRegion: geoObj,\n                  developedPoint: {\n                    title: \"\",\n                    address: \"\",\n                    point: [0, 0]\n                  },\n                  edit: true,\n                  addPoint: true,\n                  success: true\n                });\n              }\n            });\n          }\n        }, _this);\n        setTimeout(function () {\n          _this.setState({ success: false });\n        }, 6000);\n      };\n\n      _this.deleteGeo = function (id) {\n        var _this$state2 = _this.state;\n        var developedRegion = _this$state2.developedRegion;\n        var currentRegion = _this$state2.currentRegion;\n\n        var tests = {\n          mapdelete: {\n            approve: developedRegion.map.length === 1,\n            descr: \"Нельзя удалить последний пункт\"\n          }\n        };\n        lib.checkValidation(tests, function () {\n          if (Object.keys(_this.state.errors).length === 0) {\n            developedRegion.map.splice(id, 1);\n            _this.setState({ developedRegion: developedRegion, currentPointId: null });\n          }\n        }, _this);\n      };\n\n      _this.saveGeo = function () {\n        var developedRegion = _this.state.developedRegion;\n        var currentRegion = _this.state.currentRegion;\n\n\n        var errorpoint = developedRegion.map.filter(function (item, id) {\n          return item.point.length <= 1;\n        });\n        var errortitle = developedRegion.map.filter(function (item, id) {\n          return item.title.length <= 0;\n        });\n\n        var tests = {\n          name: {\n            approve: developedRegion.phone.length <= 0 || developedRegion.phone == undefined,\n            descr: \"Введите телефон\"\n          },\n          map: {\n            approve: developedRegion.map.length < 1 || developedRegion.map == undefined,\n            descr: \"Всегда должен быть один пункт\"\n          },\n          title: {\n            approve: errortitle.length > 0,\n            descr: \"Введите название пункта\"\n          },\n          point: {\n            approve: errorpoint.length > 0,\n            descr: \"Введите две координаты корректно\"\n          }\n        };\n\n        lib.checkValidation(tests, function () {\n          if (Object.keys(_this.state.errors).length === 0) {\n            var method = 'PUT';\n\n            lib.getAJAXCall({\n              method: method,\n              url: lib.urlsLibrary.contacts + currentRegion,\n              data: developedRegion,\n              callback: _this.clearState\n            });\n          }\n        }, _this);\n      };\n\n      _this.state = {\n        currentRegion: 0,\n        edit: false,\n        addPoint: false,\n        success: false,\n        currentPointId: null,\n        developedPoint: {\n          title: \"\",\n          address: \"\",\n          point: [0, 0]\n        },\n        developedRegion: {\n          phone: \"\",\n          fax: \"\",\n          email: \"\",\n          description: \"\"\n        },\n        errors: []\n      };\n      return _this;\n    }\n\n    _createClass(ContactMapRegion, [{\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        var regionList = this.props.regionList;\n        var _state = this.state;\n        var currentRegion = _state.currentRegion;\n        var edit = _state.edit;\n        var addPoint = _state.addPoint;\n        var success = _state.success;\n        var currentPointId = _state.currentPointId;\n        var developedRegion = _state.developedRegion;\n        var developedPoint = _state.developedPoint;\n        var errors = _state.errors;\n\n\n        return _react2.default.createElement(\n          'div',\n          null,\n          currentRegion == 0 ? _react2.default.createElement(\n            'h3',\n            null,\n            'Выберите регион'\n          ) : _react2.default.createElement(\n            'h3',\n            null,\n            currentRegion\n          ),\n          !edit ? _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n              'select',\n              { onChange: this.selectChangeOption, className: 'form-control' },\n              currentRegion == 0 ? _react2.default.createElement(\n                'option',\n                null,\n                'Выберите регион....'\n              ) : null,\n              regionList.map(function (item, id) {\n                return _react2.default.createElement(\n                  'option',\n                  { key: id,\n                    value: item.name,\n                    className: currentRegion === item.id ? 'active' : '' },\n                  item.name\n                );\n              })\n            )\n          ) : _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n              'div',\n              { className: 'row regionContactInf' },\n              _react2.default.createElement(\n                'p',\n                { className: 'col-xs-12' },\n                'Единый справочный телефон:'\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'col-xs-4' },\n                _react2.default.createElement('input', { type: 'text',\n                  className: 'form-control',\n                  value: developedRegion.phone,\n                  onChange: function onChange(e) {\n                    developedRegion.phone = e.target.value;\n                    _this2.setState({ developedRegion: developedRegion });\n                  }\n                }),\n                errors['name'] ? _react2.default.createElement(\n                  'div',\n                  { className: 'clearfix col-xs-12' },\n                  _react2.default.createElement(\n                    'span',\n                    { className: 'has-error-text' },\n                    errors['name']\n                  )\n                ) : null\n              ),\n              _react2.default.createElement(\n                'p',\n                { className: 'col-xs-12' },\n                'Факс:'\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'col-xs-4' },\n                _react2.default.createElement('input', { type: 'text', className: 'form-control',\n                  value: developedRegion.fax,\n                  onChange: function onChange(e) {\n                    developedRegion.fax = e.target.value;\n                    _this2.setState({ developedRegion: developedRegion });\n                  }\n                })\n              ),\n              _react2.default.createElement(\n                'p',\n                { className: 'col-xs-12' },\n                'Email:'\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'col-xs-4' },\n                _react2.default.createElement('input', { type: 'text', className: 'form-control',\n                  value: developedRegion.email,\n                  onChange: function onChange(e) {\n                    developedRegion.email = e.target.value;\n                    _this2.setState({ developedRegion: developedRegion });\n                  }\n                })\n              ),\n              _react2.default.createElement(\n                'p',\n                { className: 'col-xs-12' },\n                'Описание:'\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'col-xs-6' },\n                _react2.default.createElement('input', { type: 'text', className: 'form-control',\n                  value: developedRegion.description,\n                  onChange: function onChange(e) {\n                    developedRegion.description = e.target.value;\n                    _this2.setState({ developedRegion: developedRegion });\n                  }\n                })\n              )\n            ),\n            _react2.default.createElement(\n              'div',\n              { className: 'row form-group' },\n              developedRegion.map !== undefined && _react2.default.createElement(\n                'div',\n                { className: 'row form-group btnbox' },\n                !addPoint ? _react2.default.createElement(\n                  'div',\n                  { className: 'col-xs-2' },\n                  _react2.default.createElement(\n                    'button',\n                    { type: 'button', className: 'btn btn-primary', onClick: this.createGeo },\n                    'Добавить новую точку'\n                  )\n                ) : _react2.default.createElement(\n                  'div',\n                  { className: 'col-xs-2' },\n                  _react2.default.createElement(\n                    'button',\n                    { type: 'button', className: 'btn btn-primary', onClick: function onClick(e) {\n                        _this2.setState({ addPoint: !addPoint });\n                      } },\n                    'Редактировать места'\n                  )\n                )\n              ),\n              !addPoint ? _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(\n                  'label',\n                  { className: 'col-xs-2' },\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'col-xs-12' },\n                    'Название места:'\n                  )\n                ),\n                _react2.default.createElement(\n                  'label',\n                  { className: 'col-xs-3' },\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'col-xs-12' },\n                    'Адрес:'\n                  )\n                ),\n                _react2.default.createElement(\n                  'label',\n                  { className: 'col-xs-6' },\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'col-xs-12' },\n                    'Координаты:'\n                  )\n                ),\n                developedRegion.map.map(function (item, id) {\n                  return _react2.default.createElement(\n                    'div',\n                    { key: id, className: 'row form-group' },\n                    _react2.default.createElement(\n                      'label',\n                      { className: 'col-xs-2' },\n                      _react2.default.createElement('input', { type: 'text', className: 'form-control',\n                        value: item.title,\n                        onChange: function onChange(e) {\n                          var obj = item;\n                          obj.title = e.target.value;\n                          _this2.setState({ item: obj });\n                        }\n                      })\n                    ),\n                    _react2.default.createElement(\n                      'label',\n                      { className: 'col-xs-3' },\n                      _react2.default.createElement('input', { type: 'text', className: 'form-control',\n                        value: item.address,\n                        onChange: function onChange(e) {\n                          var obj = item;\n                          obj.address = e.target.value;\n                          _this2.setState({ item: obj });\n                        }\n                      })\n                    ),\n                    _react2.default.createElement(\n                      'label',\n                      { className: 'col-xs-3' },\n                      _react2.default.createElement(\n                        'div',\n                        { className: 'col-xs-4' },\n                        _react2.default.createElement('input', { type: 'text', className: 'form-control',\n                          value: item.point[0],\n\n                          onChange: function onChange(e) {\n                            var obj = item;\n                            obj.point[0] = e.target.value;\n                            _this2.setState({ item: obj });\n                          }\n                        })\n                      ),\n                      _react2.default.createElement(\n                        'div',\n                        { className: 'col-xs-4' },\n                        _react2.default.createElement('input', { type: 'text', className: 'form-control',\n                          value: item.point[1],\n\n                          onChange: function onChange(e) {\n                            var obj = item;\n                            obj.point[1] = e.target.value;\n                            _this2.setState({ item: obj });\n                          }\n                        })\n                      )\n                    ),\n                    _react2.default.createElement(\n                      'div',\n                      { className: 'col-xs-2' },\n                      currentPointId !== id ? _react2.default.createElement(\n                        'div',\n                        null,\n                        _react2.default.createElement(\n                          'button',\n                          { type: 'button', className: 'btn btn-danger', onClick: function onClick(e) {\n                              _this2.setState({ currentPointId: id });\n                            } },\n                          'Удалить'\n                        )\n                      ) : _react2.default.createElement(\n                        'div',\n                        null,\n                        _react2.default.createElement(\n                          'button',\n                          { type: 'button', className: 'btn btn_no', onClick: function onClick(e) {\n                              _this2.setState({ currentPointId: null });\n                            } },\n                          'Нет'\n                        ),\n                        _react2.default.createElement(\n                          'button',\n                          { type: 'button', className: 'btn btn-danger btn_yes', onClick: function onClick(e) {\n                              _this2.deleteGeo(id);\n                            } },\n                          'Да'\n                        ),\n                        _react2.default.createElement(\n                          'label',\n                          { className: 'col-xs-5' },\n                          'Вы уверены?'\n                        )\n                      ),\n                      errors['mapdelete'] ? _react2.default.createElement(\n                        'div',\n                        { className: 'clearfix col-xs-12' },\n                        _react2.default.createElement(\n                          'span',\n                          { className: 'has-error-text' },\n                          errors['mapdelete']\n                        )\n                      ) : null\n                    )\n                  );\n                })\n              ) : _react2.default.createElement(\n                'div',\n                { className: 'row form-group' },\n                _react2.default.createElement(\n                  'div',\n                  { className: 'row' },\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'col-xs-2' },\n                    _react2.default.createElement(\n                      'p',\n                      { className: 'col-xs-12' },\n                      'Название места:'\n                    )\n                  ),\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'col-xs-3' },\n                    _react2.default.createElement(\n                      'p',\n                      { className: 'col-xs-12' },\n                      'Адрес:'\n                    )\n                  ),\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'col-xs-6' },\n                    _react2.default.createElement(\n                      'p',\n                      { className: 'col-xs-12' },\n                      'Координаты:'\n                    )\n                  )\n                ),\n                _react2.default.createElement(\n                  'div',\n                  { className: 'row' },\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'col-xs-2' },\n                    _react2.default.createElement('input', { type: 'text', className: 'form-control',\n                      value: developedPoint.title,\n                      onChange: function onChange(e) {\n                        var obj = developedPoint;\n                        obj.title = e.target.value;\n                        _this2.setState({ developedPoint: obj });\n                      }\n                    }),\n                    errors['addtitle'] ? _react2.default.createElement(\n                      'div',\n                      { className: 'clearfix col-xs-12' },\n                      _react2.default.createElement(\n                        'span',\n                        { className: 'has-error-text' },\n                        errors['addtitle']\n                      )\n                    ) : null\n                  ),\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'col-xs-3' },\n                    _react2.default.createElement('input', { type: 'text', className: 'form-control',\n                      value: developedPoint.address,\n                      onChange: function onChange(e) {\n                        var obj = developedPoint;\n                        obj.address = e.target.value;\n                        _this2.setState({ developedPoint: obj });\n                      }\n                    })\n                  ),\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'col-xs-3' },\n                    _react2.default.createElement(\n                      'div',\n                      { className: 'col-xs-4' },\n                      _react2.default.createElement('input', { type: 'text', className: 'form-control',\n                        value: developedPoint.point[0],\n                        placeholder: 23.434322,\n\n                        onChange: function onChange(e) {\n                          var obj = developedPoint;\n                          obj.point[0] = e.target.value;\n                          _this2.setState({ developedPoint: obj });\n                        }\n                      })\n                    ),\n                    _react2.default.createElement(\n                      'div',\n                      { className: 'col-xs-4' },\n                      _react2.default.createElement('input', { type: 'text', className: 'form-control',\n                        value: developedPoint.point[1],\n                        placeholder: 23.434322,\n\n                        onChange: function onChange(e) {\n                          var obj = developedPoint;\n                          obj.point[1] = e.target.value;\n                          _this2.setState({ developedPoint: obj });\n                        }\n                      })\n                    ),\n                    errors['addpoint'] ? _react2.default.createElement(\n                      'div',\n                      { className: 'clearfix col-xs-12' },\n                      _react2.default.createElement(\n                        'span',\n                        { className: 'has-error-text' },\n                        errors['addpoint']\n                      )\n                    ) : null\n                  ),\n                  _react2.default.createElement(\n                    'div',\n                    { className: 'col-xs-1' },\n                    _react2.default.createElement(\n                      'button',\n                      { type: 'button', className: 'btn btn-success', onClick: this.addNewMap },\n                      'Добавить'\n                    )\n                  ),\n                  success && _react2.default.createElement(\n                    'div',\n                    { className: 'col-xs-2' },\n                    _react2.default.createElement(\n                      'span',\n                      { className: 'has-success-text' },\n                      'Успешно добавлено'\n                    )\n                  )\n                )\n              )\n            ),\n            _react2.default.createElement(\n              'div',\n              { className: 'bs-example' },\n              _react2.default.createElement(\n                'button',\n                { type: 'button', className: 'btn ', onClick: this.clearState },\n                'Отменить'\n              ),\n              _react2.default.createElement(\n                'button',\n                { type: 'button', className: 'btn btn-success', onClick: this.saveGeo },\n                'Сохранить'\n              ),\n              errors['point'] ? _react2.default.createElement(\n                'div',\n                { className: 'clearfix col-xs-12' },\n                _react2.default.createElement(\n                  'span',\n                  { className: 'has-error-text' },\n                  errors['point']\n                )\n              ) : null,\n              errors['title'] ? _react2.default.createElement(\n                'div',\n                { className: 'clearfix col-xs-12' },\n                _react2.default.createElement(\n                  'span',\n                  { className: 'has-error-text' },\n                  errors['title']\n                )\n              ) : null,\n              errors['map'] ? _react2.default.createElement(\n                'div',\n                { className: 'clearfix col-xs-12' },\n                _react2.default.createElement(\n                  'span',\n                  { className: 'has-error-text' },\n                  errors['map']\n                )\n              ) : null\n            )\n          )\n        );\n      }\n    }]);\n\n    return ContactMapRegion;\n  }(_react2.default.Component);\n\n  var ContactMapConfiguration = function (_React$Component2) {\n    _inherits(ContactMapConfiguration, _React$Component2);\n\n    function ContactMapConfiguration(props) {\n      _classCallCheck(this, ContactMapConfiguration);\n\n      var _this3 = _possibleConstructorReturn(this, (ContactMapConfiguration.__proto__ || Object.getPrototypeOf(ContactMapConfiguration)).call(this, props));\n\n      _this3.getRegionList = function () {\n        lib.getAJAXCall({\n          method: 'GET',\n          url: lib.urlsLibrary.region,\n          callback: function callback(region) {\n\n            _this3.setState({\n              regionList: region\n            });\n          }\n        });\n      };\n\n      _this3.state = {\n        regionList: []\n      };\n      return _this3;\n    }\n\n    _createClass(ContactMapConfiguration, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this.getRegionList();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var regionList = this.state.regionList;\n\n\n        return _react2.default.createElement(\n          'div',\n          null,\n          _react2.default.createElement(ContactMapRegion, {\n            regionList: regionList,\n            onChange: this.getRegionList\n          })\n        );\n      }\n    }]);\n\n    return ContactMapConfiguration;\n  }(_react2.default.Component);\n\n  _reactDom2.default.render(_react2.default.createElement(ContactMapConfiguration, null), document.getElementById('container-conf'));\n});\n"],"sourceRoot":"/source/"}